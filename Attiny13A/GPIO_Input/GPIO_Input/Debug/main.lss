
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000be  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000012c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003dc  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000037b  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001e6  00000000  00000000  000008a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000291  00000000  00000000  00000ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000d41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	02 d0       	rcall	.+4      	; 0x22 <main>
  1e:	23 c0       	rjmp	.+70     	; 0x66 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <main>:


int main(void)
{
	//Setting the PB3 pin of ATtiny13A as an INPUT
	PORTB_T |= PB3_T;
  22:	88 b3       	in	r24, 0x18	; 24
  24:	99 b3       	in	r25, 0x19	; 25
  26:	88 60       	ori	r24, 0x08	; 8
  28:	99 bb       	out	0x19, r25	; 25
  2a:	88 bb       	out	0x18, r24	; 24
	DDRB_T &= ~PB3_T;
	
	//Setting the PB4 pin of ATtiny13A as an OUTPUT
	DDRB_T &= ~PB4_T;
  2c:	87 b3       	in	r24, 0x17	; 23
  2e:	98 b3       	in	r25, 0x18	; 24
  30:	80 7e       	andi	r24, 0xE0	; 224
  32:	98 bb       	out	0x18, r25	; 24
  34:	87 bb       	out	0x17, r24	; 23
	
    while (1) 
    {
		_NOP();
  36:	00 00       	nop
		if(PINB_T>>3 & 1u){
  38:	b3 9b       	sbis	0x16, 3	; 22
  3a:	06 c0       	rjmp	.+12     	; 0x48 <__SREG__+0x9>
			PORTB_T |= PB4_T;
  3c:	88 b3       	in	r24, 0x18	; 24
  3e:	99 b3       	in	r25, 0x19	; 25
  40:	80 61       	ori	r24, 0x10	; 16
  42:	99 bb       	out	0x19, r25	; 25
  44:	88 bb       	out	0x18, r24	; 24
  46:	05 c0       	rjmp	.+10     	; 0x52 <__SREG__+0x13>
		}else{
			PORTB_T &= ~PB4_T;
  48:	88 b3       	in	r24, 0x18	; 24
  4a:	99 b3       	in	r25, 0x19	; 25
  4c:	80 7e       	andi	r24, 0xE0	; 224
  4e:	99 bb       	out	0x19, r25	; 25
  50:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  52:	2f e3       	ldi	r18, 0x3F	; 63
  54:	8d e0       	ldi	r24, 0x0D	; 13
  56:	93 e0       	ldi	r25, 0x03	; 3
  58:	21 50       	subi	r18, 0x01	; 1
  5a:	80 40       	sbci	r24, 0x00	; 0
  5c:	90 40       	sbci	r25, 0x00	; 0
  5e:	e1 f7       	brne	.-8      	; 0x58 <__SREG__+0x19>
  60:	00 c0       	rjmp	.+0      	; 0x62 <__SREG__+0x23>
  62:	00 00       	nop
  64:	e8 cf       	rjmp	.-48     	; 0x36 <main+0x14>

00000066 <_exit>:
  66:	f8 94       	cli

00000068 <__stop_program>:
  68:	ff cf       	rjmp	.-2      	; 0x68 <__stop_program>
